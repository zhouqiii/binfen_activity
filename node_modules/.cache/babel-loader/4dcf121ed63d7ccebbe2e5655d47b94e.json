{"remainingRequest":"C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\src\\views\\ActivityConfig.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\src\\views\\ActivityConfig.vue","mtime":1621577918638},{"path":"C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\panze\\Documents\\ColorfuLife\\gitbinfen\\binfen_activity\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}